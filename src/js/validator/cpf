/*
 * CPF number (Cadastrado de Pessoas FÃ­sicas) is the Brazilian tax registration number for citizens.
 * CPF numbers have 11 digits in total: 9 numbers followed by 2 check numbers that are being used for validation.
 * @link http://formvalidation.io/validators/cpfBR
 * @author https://github.com/jobdiogenes
 * @licence follow original work MIT licence, 
 */
(function($) {
  FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'pt_BR': {
            cpf: {
                'default': 'Por favor digite um CPF v&aacute;lido'
            }
        }
    });
  FormValidation.Validator.cpf = {
    /**
     * Return true if the input value is a valid CPF Brazil number
     * based from work of https://github.com/gorork
     */
    validade: function(validator, $field, options) {
        var value = validator.getFieldValue($field, "CPF");
        if (value === '') {
           return true;
        }
        // Left only numbers from value, perhaps with HTML5 pattern this will be not needed. 
	      value = value.replace(/\D/g,'');
	      // Check if has 11 digits 
	      if (value.length !== 11) {
	      		return false;
	      }
	      var sum = 0,
		    firstCN, secondCN, checkResult, i;
		    firstCN = parseInt(value.substring(9, 10), 10);
		    secondCN = parseInt(value.substring(10, 11), 10);
		    checkResult = function(sum, cn) {
		    		var result = (sum * 10) % 11;
		    		if ((result === 10) || (result === 11)) {result = 0;}
		    				return (result === cn);
		    		};
		    // Checking for dump data
		    if (value === "" ||
		    		value === "00000000000" ||
		    		value === "11111111111" ||
		    		value === "22222222222" ||
		    		value === "33333333333" ||
		    		value === "44444444444" ||
		    		value === "55555555555" ||
		    		value === "66666666666" ||
		    		value === "77777777777" ||
		    		value === "88888888888" ||
		    		value === "99999999999"
		    ) {
		    		return false;
		    	}
		    // Step 1 - using first Check Number:
		    for ( i = 1; i <= 9; i++ ) {
		    		sum = sum + parseInt(value.substring(i - 1, i), 10) * (11 - i);
		    }
		    // If first Check Number (CN) is valid, move to Step 2 - using second Check Number:
		    if ( checkResult(sum, firstCN) ) {
		    		sum = 0;
		    		for ( i = 1; i <= 10; i++ ) {
		    		sum = sum + parseInt(value.substring(i - 1, i), 10) * (12 - i);
		    		}
		    		return checkResult(sum, secondCN);
		    }
		 	return false;
		}
	};
}(jQuery));
